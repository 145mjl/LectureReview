package model1.board;

import java.util.List;
import java.util.Map;
import java.util.Vector;

import javax.servlet.ServletContext;

import common.JdbcConnect;

public class BoardDAO extends JdbcConnect{
	public BoardDAO(ServletContext application) {
		super(application);
	}
	
	public int selectCount(Map<String,Object> map) {
		int totalCount=0;
		
		String query="SELECT COUNT(*) FROM board";
		if(map.get("searchWord")!=null) {
			query+=" WHERE "+map.get("searchField")+" "+"LIKE '%"+map.get("searchWord")+"%'";
		}
		
		try {
			stmt=conn.createStatement();
			rs=stmt.executeQuery(query);
			rs.next();
			totalCount=rs.getInt(1);
		}catch(Exception e) {
			System.out.println("게시물 수를 구하는 중 예외 발생");
			e.printStackTrace();
		}
		return totalCount;
	}
	
	public List<BoardDTO> selectList(Map<String,Object> map){
		List<BoardDTO> bbs=new Vector<BoardDTO>();
		
		String query="SELECT * FROM board";
		if(map.get("searchWord")!=null) {
			query+=" WHERE "+map.get("searchField")+" "+
					"LIKE '%"+map.get("searchWord")+"%' ";
		}
		query+=" ORDER BY num DESC ";
		
		try {
			stmt=conn.createStatement();
			rs=stmt.executeQuery(query);
			
			while(rs.next()) {
				BoardDTO dto=new BoardDTO();
				
				dto.setNum(rs.getString("num"));
				dto.setTitle(rs.getString("title"));
				dto.setContent(rs.getString("content"));
				dto.setId(rs.getString("id"));
				dto.setPostdate(rs.getDate("postdate"));
				dto.setVisitcount(rs.getString("visitCount"));
				
				bbs.add(dto);
			}
		}catch(Exception e) {
			System.out.println("게시물 조회 중 예외 발생");
			e.printStackTrace();
		}
		return bbs;
	}
	
	public List<BoardDTO> selectListPage(Map<String,Object> map){
		List<BoardDTO> bbs=new Vector<BoardDTO>();
		
		StringBuilder sb=new StringBuilder();
		sb.append("SELECT * FROM ");
		sb.append("( SELECT Tb.*, rowNum rNum FROM ");
		sb.append("( SELECT * FROM board ");
		if(map.get("searchWord")!=null) {
			sb.append("WHERE ");
			sb.append(map.get("searchField").toString());
			sb.append(" LIKE ");
			sb.append("'%");
			sb.append(map.get("search").toString());
			sb.append("%' ");
		}
		sb.append("ORDER BY num DESC");
		sb.append(" ) Tb");
		sb.append(" ) ");
		sb.append("WHERE rNum BETWEEN ? and ?");
		
		String query=new String(sb);
		
		try {
			pstmt=conn.prepareStatement(query);
			pstmt.setString(1, map.get("start").toString());
			pstmt.setString(2, map.get("end").toString());
			
			rs=pstmt.executeQuery();
			
			while(rs.next()) {
				BoardDTO dto=new BoardDTO();
				dto.setNum(rs.getString("num"));
				dto.setTitle(rs.getString("title"));
				dto.setContent(rs.getString("content"));
				dto.setId(rs.getString("id"));
				dto.setPostdate(rs.getDate("postdate"));
				dto.setVisitcount(rs.getString("visitCount"));
				
				bbs.add(dto);
			}
		}catch(Exception e) {
			System.out.println("게시물 조회 중 예외 발생(페이징 처리O)");
			e.printStackTrace();
		}
		return bbs;
	}
	
	
	public int insertWrite(BoardDTO dto) {
		int result=0;
		
		try {
			String query="INSERT INTO board ( "
					+" num,title,content,id,visitcount) "
					+" VALUES ( "
					+" seq_board_num.NEXTVAL, ?, ?, ?, 0)";
			pstmt=conn.prepareStatement(query);
			pstmt.setString(1, dto.getTitle());
			pstmt.setString(2, dto.getContent());
			pstmt.setString(3, dto.getId());
			
			result=pstmt.executeUpdate();
		}catch(Exception e) {
			System.out.println("게시물 입력 중 예외 발생");
			e.printStackTrace();
		}
		
		return result;
	}
	
	public BoardDTO selectView(String num) {
		BoardDTO dto=new BoardDTO();
		
		try {
			String query="Select B.*, M.name"
					+" FROM member M INNER JOIN board B"
					+" ON M.id=B.id"
					+" WHERE num=?";
			pstmt=conn.prepareStatement(query);
			pstmt.setString(1, num);
			rs=pstmt.executeQuery();
			//Executes the SQL query in this PreparedStatement object
			//and returns the ResultSet object generated by the query.
			while(rs.next()) {
				dto.setNum(rs.getString(1));
				dto.setTitle(rs.getString(2));
				dto.setContent(rs.getString(3));
				dto.setId(rs.getString(4));
				dto.setPostdate(rs.getDate(5));
				dto.setVisitcount(rs.getString(6));
				dto.setName(rs.getString(7));//"name"등 컬럼명도 가능함
			}
		}catch(Exception e) {
			System.out.println("게시물 조회 메서드 예외 발생");
			e.printStackTrace();
		}
		
		return dto;
	}
	
	public void updateVisitCount(String num) {
		String query="UPDATE board"
				+" SET visitcount=visitcount+1"
				+" WHERE num=?";
		
		try {
			pstmt=conn.prepareStatement(query);
			pstmt.setString(1, num);
			pstmt.executeQuery();
		}catch(Exception e) {
			System.out.println("게시물 조회수 증가 중 예외 발생");
			e.printStackTrace();
		}
	}
	
	public int updateEdit(BoardDTO dto) {
		int result=0;
		try {
			String query="UPDATE board"
					+" SET title=?, content=?"
					+" WHERE num=?";
			pstmt=conn.prepareStatement(query);
			pstmt.setString(1, dto.getTitle());
			pstmt.setString(2, dto.getContent());
			pstmt.setString(3, dto.getNum());
			result=pstmt.executeUpdate();
		}catch(Exception e) {
			System.out.println("글 수정 메서드 예외 발생");
			e.printStackTrace();
		}
		return result;
	}
	
	public int deletePost(BoardDTO dto) {
		int result=0;
		
		try {
			String query="DELETE FROM board"
						+" WHERE num=?";
			pstmt=conn.prepareStatement(query);
			pstmt.setString(1, dto.getNum());
			result=pstmt.executeUpdate();
		}catch(Exception e) {
			System.out.println("글 삭제 메서드에서 예외 발생");
			e.printStackTrace();
		}
		
		return result;
	}
}
